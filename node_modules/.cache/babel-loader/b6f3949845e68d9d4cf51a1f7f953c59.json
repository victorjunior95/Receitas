{"ast":null,"code":"var _jsxFileName = \"/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/pages/FeitasFavoritas.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from '../components/Card';\nimport Header from '../components/header/Header';\nexport default function FeitasFavoritas() {\n  const history = useHistory();\n  const path = history.location.pathname; // let listCart = [];\n  // let listFavCart = [];\n\n  const listCart = JSON.parse(localStorage.getItem('doneRecipes'));\n  const listFavCart = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const [filteredDoneList, setDoneList] = useState([]); // const [FList, setFavList] = useState(listFavCart);\n\n  const [FList, setFavList] = useState([]);\n\n  const unfavRecipe = recipeId => {\n    const updatedFavs = JSON.parse(localStorage.getItem('favoriteRecipes')).filter(recipe => recipe.id !== recipeId);\n    console.log(updatedFavs);\n    setFavList(updatedFavs);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavs));\n    console.log(localStorage); // updatedFavs.filter((recipe) => recipe.id !== recipeId);\n    // localStorage.favoriteRecipes = updatedFavs;\n  };\n\n  useEffect(() => {\n    if (listCart) {\n      setDoneList(listCart);\n    }\n\n    if (listFavCart) {\n      setFavList(listFavCart);\n    }\n  }, []); // useEffect(() => {\n  //   setFavList(listFavCart);\n  // }, [listFavCart]);\n\n  if (path === '/receitas-feitas') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Receitas Feitas\",\n      showSearchButton: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"filter\",\n      value: \"All\",\n      id: \"All\",\n      \"data-testid\": \"filter-by-all-btn\",\n      onClick: () => setDoneList(listCart),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), \"All\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Food\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"filter\",\n      value: \"Food\",\n      id: \"Food\",\n      \"data-testid\": \"filter-by-food-btn\",\n      onClick: () => setDoneList(listCart.filter(a => a.type === 'comida')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), \"Food\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Drinks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"filter\",\n      value: \"Drinks\",\n      id: \"Drinks\",\n      \"data-testid\": \"filter-by-drink-btn\",\n      onClick: () => setDoneList(listCart.filter(a => a.type === 'bebida')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), \"Drinks\"), filteredDoneList.map((card, index) => /*#__PURE__*/React.createElement(Card, {\n      key: card.id,\n      id: card.id,\n      index: index,\n      name: card.name,\n      thumbnail: card.image,\n      isFood: card.type === 'comida',\n      cat: card.category,\n      doneDate: card.doneDate,\n      tags: card.tags,\n      area: card.area,\n      alcoholic: card.alcoholicOrNot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  if (path === '/receitas-favoritas') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Receitas Favoritas\",\n      showSearchButton: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"filter\",\n      value: \"All\",\n      id: \"All\",\n      \"data-testid\": \"filter-by-all-btn\",\n      onClick: () => setFavList(listFavCart),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), \"All\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Food\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"filter\",\n      value: \"Food\",\n      id: \"Food\",\n      \"data-testid\": \"filter-by-food-btn\",\n      onClick: () => setFavList(listFavCart.filter(a => a.type === 'comida')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), \"Food\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Drinks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"filter\",\n      value: \"Drinks\",\n      id: \"Drinks\",\n      \"data-testid\": \"filter-by-drink-btn\",\n      onClick: () => setFavList(listFavCart.filter(a => a.type === 'bebida')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), \"Drinks\"), FList.map((card, index) => /*#__PURE__*/React.createElement(Card, {\n      key: card.id,\n      id: card.id,\n      tags: card.tags,\n      area: card.area,\n      index: index,\n      cat: card.category,\n      alcoholic: card.alcoholicOrNot,\n      name: card.name,\n      thumbnail: card.image,\n      isFood: card.type === 'comida',\n      unfavRecipe: unfavRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/pages/FeitasFavoritas.js"],"names":["React","useState","useEffect","useHistory","Card","Header","FeitasFavoritas","history","path","location","pathname","listCart","JSON","parse","localStorage","getItem","listFavCart","filteredDoneList","setDoneList","FList","setFavList","unfavRecipe","recipeId","updatedFavs","filter","recipe","id","console","log","setItem","stringify","a","type","map","card","index","name","image","category","doneDate","tags","area","alcoholicOrNot"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from '../components/Card';\nimport Header from '../components/header/Header';\n\nexport default function FeitasFavoritas() {\n  const history = useHistory();\n  const path = history.location.pathname;\n  // let listCart = [];\n  // let listFavCart = [];\n  const listCart = JSON.parse(localStorage.getItem('doneRecipes'));\n  const listFavCart = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const [filteredDoneList, setDoneList] = useState([]);\n  // const [FList, setFavList] = useState(listFavCart);\n  const [FList, setFavList] = useState([]);\n\n  const unfavRecipe = (recipeId) => {\n    const updatedFavs = JSON.parse(localStorage.getItem('favoriteRecipes'))\n      .filter((recipe) => recipe.id !== recipeId);\n    console.log(updatedFavs);\n    setFavList(updatedFavs);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavs));\n    console.log(localStorage);\n    // updatedFavs.filter((recipe) => recipe.id !== recipeId);\n    // localStorage.favoriteRecipes = updatedFavs;\n  };\n\n  useEffect(() => {\n    if (listCart) { setDoneList(listCart); }\n    if (listFavCart) { setFavList(listFavCart); }\n  }, []);\n\n  // useEffect(() => {\n  //   setFavList(listFavCart);\n  // }, [listFavCart]);\n\n  if (path === '/receitas-feitas') {\n    return (\n      <div>\n        <Header title=\"Receitas Feitas\" showSearchButton={ false } />\n        <label htmlFor=\"All\">\n          <input\n            type=\"radio\"\n            name=\"filter\"\n            value=\"All\"\n            id=\"All\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ () => setDoneList(listCart) }\n          />\n          All\n        </label>\n        <label htmlFor=\"Food\">\n          <input\n            type=\"radio\"\n            name=\"filter\"\n            value=\"Food\"\n            id=\"Food\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={ () => setDoneList(listCart.filter((a) => a.type === 'comida')) }\n          />\n          Food\n        </label>\n        <label htmlFor=\"Drinks\">\n          <input\n            type=\"radio\"\n            name=\"filter\"\n            value=\"Drinks\"\n            id=\"Drinks\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ () => setDoneList(listCart.filter((a) => a.type === 'bebida')) }\n          />\n          Drinks\n        </label>\n        { filteredDoneList.map((card, index) => (\n          <Card\n            key={ card.id }\n            id={ card.id }\n            index={ index }\n            name={ card.name }\n            thumbnail={ card.image }\n            isFood={ card.type === 'comida' }\n            cat={ card.category }\n            doneDate={ card.doneDate }\n            tags={ card.tags }\n            area={ card.area }\n            alcoholic={ card.alcoholicOrNot }\n          />\n        ))}\n\n      </div>\n    );\n  } if (path === '/receitas-favoritas') {\n    return (\n      <div>\n        <Header title=\"Receitas Favoritas\" showSearchButton={ false } />\n        <label htmlFor=\"All\">\n          <input\n            type=\"radio\"\n            name=\"filter\"\n            value=\"All\"\n            id=\"All\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ () => setFavList(listFavCart) }\n          />\n          All\n        </label>\n        <label htmlFor=\"Food\">\n          <input\n            type=\"radio\"\n            name=\"filter\"\n            value=\"Food\"\n            id=\"Food\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={\n              () => setFavList(listFavCart.filter((a) => a.type === 'comida'))\n            }\n          />\n          Food\n        </label>\n        <label htmlFor=\"Drinks\">\n          <input\n            type=\"radio\"\n            name=\"filter\"\n            value=\"Drinks\"\n            id=\"Drinks\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ () => setFavList(listFavCart.filter((a) => a.type === 'bebida')) }\n          />\n          Drinks\n        </label>\n        { FList.map((card, index) => (\n          <Card\n            key={ card.id }\n            id={ card.id }\n            tags={ card.tags }\n            area={ card.area }\n            index={ index }\n            cat={ card.category }\n            alcoholic={ card.alcoholicOrNot }\n            name={ card.name }\n            thumbnail={ card.image }\n            isFood={ card.type === 'comida' }\n            unfavRecipe={ unfavRecipe }\n          />\n        ))}\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}