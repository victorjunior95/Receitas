{"ast":null,"code":"var _jsxFileName = \"/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport { useHistory } from 'react-router-dom';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\n\nconst Card = ({\n  id,\n  index,\n  name,\n  thumbnail,\n  isFood,\n  cat,\n  doneDate,\n  tags,\n  area,\n  alcoholic,\n  unfavRecipe\n}) => {\n  const history = useHistory();\n  const path = history.location.pathname;\n  let isClicked = false; //   console.log(history);\n  //   console.log(index);\n  //   console.log(name);\n  //   console.log(thumbnail);\n\n  const popTags = () => tags.map((tagName, tagInex) => {\n    console.log(` ${tagName} ${tagInex} `);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: tagInex,\n      \"data-testid\": `${index}-${tagName}-horizontal-tag`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, tagName);\n  });\n\n  function handleClick() {\n    if (isFood) {\n      history.push(`/comidas/${id}`);\n    } else {\n      history.push(`/bebidas/${id}`);\n    }\n  }\n\n  let urlDetails = '';\n\n  if (isFood) {\n    urlDetails = `http://localhost:3000/comidas/${id}`;\n  } else {\n    urlDetails = `http://localhost:3000/bebidas/${id}`;\n  }\n\n  if (path === '/bebidas' || path === '/comidas' || path === '/explorar/comidas/area') {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => handleClick(),\n      \"data-testid\": `${index}-recipe-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": `${index}-card-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, name), /*#__PURE__*/React.createElement(\"img\", {\n      // style={ `max-width:200px;\n      //     max-height:150px;\n      //     width: auto;\n      //     height: auto ;` }\n      width: \"320\",\n      height: \"205\",\n      src: thumbnail,\n      alt: \"Foto da receita\",\n      \"data-testid\": `${index}-card-img`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (path === '/receitas-feitas') {\n    console.log('Receitas feitas');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": `${index}-recipe-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      onClick: () => handleClick(),\n      width: \"320\",\n      height: \"205\",\n      src: thumbnail,\n      alt: \"Foto da receita\",\n      \"data-testid\": `${index}-horizontal-image`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), isFood ? /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, `${area} - ${cat}`) : /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, alcoholic), /*#__PURE__*/React.createElement(\"a\", {\n      \"data-testid\": `${index}-horizontal-name`,\n      href: urlDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, doneDate), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      \"data-testid\": `${index}-horizontal-share-btn`,\n      src: shareIcon,\n      alt: \"share\",\n      onClick: () => {\n        copy(urlDetails);\n        isClicked = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: isClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Link copiado!\"), popTags());\n  }\n\n  if (path === '/receitas-favoritas') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": `${index}-recipe-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      onClick: () => handleClick(),\n      width: \"320\",\n      height: \"205\",\n      src: thumbnail,\n      alt: \"Foto da receita\",\n      \"data-testid\": `${index}-horizontal-image`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), isFood ? /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, `${area} - ${cat}`) : /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, alcoholic), /*#__PURE__*/React.createElement(\"a\", {\n      \"data-testid\": `${index}-horizontal-name`,\n      href: urlDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, doneDate), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      \"data-testid\": `${index}-horizontal-share-btn`,\n      src: shareIcon,\n      alt: \"share\",\n      onClick: () => {\n        copy(urlDetails);\n        isClicked = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      \"data-testid\": `${index}-horizontal-favorite-btn`,\n      src: blackHeartIcon,\n      alt: \"favorite\",\n      onClick: () => unfavRecipe(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: isClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"Link copiado!\"), () => popTags());\n  }\n};\n\nCard.defaultProps = {\n  category: '',\n  doneDate: '',\n  tags: [],\n  area: '',\n  alcoholic: '',\n  unfavRecipe: () => {}\n};\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  isFood: PropTypes.bool.isRequired,\n  category: PropTypes.string,\n  doneDate: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  area: PropTypes.string,\n  alcoholic: PropTypes.string,\n  unfavRecipe: PropTypes.func\n};\nexport default Card;","map":{"version":3,"sources":["/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/Card.js"],"names":["React","PropTypes","copy","useHistory","Card","id","index","name","thumbnail","isFood","cat","doneDate","tags","area","alcoholic","unfavRecipe","history","path","location","pathname","isClicked","popTags","map","tagName","tagInex","console","log","handleClick","push","urlDetails","shareIcon","blackHeartIcon","defaultProps","category","propTypes","string","isRequired","number","bool","arrayOf","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA,GAAtC;AACZC,EAAAA,QADY;AACFC,EAAAA,IADE;AACIC,EAAAA,IADJ;AACUC,EAAAA,SADV;AACqBC,EAAAA;AADrB,CAAD,KACwC;AACnD,QAAMC,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAMc,IAAI,GAAGD,OAAO,CAACE,QAAR,CAAiBC,QAA9B;AACA,MAAIC,SAAS,GAAG,KAAhB,CAHmD,CAInD;AACA;AACA;AACA;;AACA,QAAMC,OAAO,GAAG,MACdT,IAAI,CAACU,GAAL,CAAS,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAa,IAAGH,OAAQ,IAAGC,OAAQ,GAAnC;AACA,wBACE;AACE,MAAA,GAAG,EAAGA,OADR;AAEE,qBAAe,GAAElB,KAAM,IAAGiB,OAAQ,iBAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,OAJH,CADF;AAQD,GAVD,CADF;;AAaA,WAASI,WAAT,GAAuB;AACrB,QAAIlB,MAAJ,EAAY;AACVO,MAAAA,OAAO,CAACY,IAAR,CAAc,YAAWvB,EAAG,EAA5B;AACD,KAFD,MAEO;AACLW,MAAAA,OAAO,CAACY,IAAR,CAAc,YAAWvB,EAAG,EAA5B;AACD;AACF;;AACD,MAAIwB,UAAU,GAAG,EAAjB;;AACA,MAAIpB,MAAJ,EAAY;AACVoB,IAAAA,UAAU,GAAI,iCAAgCxB,EAAG,EAAjD;AACD,GAFD,MAEO;AACLwB,IAAAA,UAAU,GAAI,iCAAgCxB,EAAG,EAAjD;AACD;;AACD,MAAIY,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,UAAhC,IAA8CA,IAAI,KAAK,wBAA3D,EAAqF;AACnF,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,MAAMU,WAAW,EAF7B;AAGE,qBAAe,GAAErB,KAAM,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAI,qBAAe,GAAEA,KAAM,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CC,IAA1C,CANF,eAOE;AACA;AACA;AACA;AACA;AACE,MAAA,KAAK,EAAC,KALR;AAME,MAAA,MAAM,EAAC,KANT;AAOE,MAAA,GAAG,EAAGC,SAPR;AAQE,MAAA,GAAG,EAAC,iBARN;AASE,qBAAe,GAAEF,KAAM,WATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAqBD;;AAAC,MAAIW,IAAI,KAAK,kBAAb,EAAiC;AACjCQ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,wBACE;AAAK,qBAAe,GAAEpB,KAAM,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,OAAO,EAAG,MAAMqB,WAAW,EAF7B;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,MAAM,EAAC,KAJT;AAKE,MAAA,GAAG,EAAGnB,SALR;AAME,MAAA,GAAG,EAAC,iBANN;AAOE,qBAAe,GAAEF,KAAM,mBAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGG,MAAM,gBACH;AAAG,qBAAe,GAAEH,KAAM,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoD,GAAEO,IAAK,MAAKH,GAAI,EAApE,CADG,gBAEH;AAAG,qBAAe,GAAEJ,KAAM,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDQ,SAAnD,CAbN,eAcE;AAAG,qBAAe,GAAER,KAAM,kBAA1B;AAA8C,MAAA,IAAI,EAAGuB,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmEtB,IAAnE,CAdF,eAeE;AAAG,qBAAe,GAAED,KAAM,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDK,QAApD,CAfF,eAgBE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,qBAAe,GAAEL,KAAM,uBAFzB;AAGE,MAAA,GAAG,EAAGwB,SAHR;AAIE,MAAA,GAAG,EAAC,OAJN;AAKE,MAAA,OAAO,EAAG,MAAM;AAAE5B,QAAAA,IAAI,CAAC2B,UAAD,CAAJ;AAAkBT,QAAAA,SAAS,GAAG,IAAZ;AAAmB,OALzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eAuBE;AAAG,MAAA,MAAM,EAAGA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAvBF,EAwBGC,OAAO,EAxBV,CADF;AA4BD;;AAAC,MAAIJ,IAAI,KAAK,qBAAb,EAAoC;AACpC,wBACE;AAAK,qBAAe,GAAEX,KAAM,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,OAAO,EAAG,MAAMqB,WAAW,EAF7B;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,MAAM,EAAC,KAJT;AAKE,MAAA,GAAG,EAAGnB,SALR;AAME,MAAA,GAAG,EAAC,iBANN;AAOE,qBAAe,GAAEF,KAAM,mBAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGG,MAAM,gBACH;AAAG,qBAAe,GAAEH,KAAM,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoD,GAAEO,IAAK,MAAKH,GAAI,EAApE,CADG,gBAEH;AAAG,qBAAe,GAAEJ,KAAM,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDQ,SAAnD,CAbN,eAcE;AAAG,qBAAe,GAAER,KAAM,kBAA1B;AAA8C,MAAA,IAAI,EAAGuB,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmEtB,IAAnE,CAdF,eAeE;AAAG,qBAAe,GAAED,KAAM,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDK,QAApD,CAfF,eAgBE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,qBAAe,GAAEL,KAAM,uBAFzB;AAGE,MAAA,GAAG,EAAGwB,SAHR;AAIE,MAAA,GAAG,EAAC,OAJN;AAKE,MAAA,OAAO,EAAG,MAAM;AAAE5B,QAAAA,IAAI,CAAC2B,UAAD,CAAJ;AAAkBT,QAAAA,SAAS,GAAG,IAAZ;AAAmB,OALzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eAuBE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,qBAAe,GAAEd,KAAM,0BAFzB;AAGE,MAAA,GAAG,EAAGyB,cAHR;AAIE,MAAA,GAAG,EAAC,UAJN;AAKE,MAAA,OAAO,EAAG,MAAMhB,WAAW,CAACV,EAAD,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,eA8BE;AAAG,MAAA,MAAM,EAAGe,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA9BF,EA+BG,MAAMC,OAAO,EA/BhB,CADF;AAmCD;AACF,CA5HD;;AA6HAjB,IAAI,CAAC4B,YAAL,GAAoB;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBtB,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,IAAI,EAAE,EAHY;AAIlBC,EAAAA,IAAI,EAAE,EAJY;AAKlBC,EAAAA,SAAS,EAAE,EALO;AAMlBC,EAAAA,WAAW,EAAE,MAAM,CAAE;AANH,CAApB;AASAX,IAAI,CAAC8B,SAAL,GAAiB;AACf7B,EAAAA,EAAE,EAAEJ,SAAS,CAACkC,MAAV,CAAiBC,UADN;AAEf9B,EAAAA,KAAK,EAAEL,SAAS,CAACoC,MAAV,CAAiBD,UAFT;AAGf7B,EAAAA,IAAI,EAAEN,SAAS,CAACkC,MAAV,CAAiBC,UAHR;AAIf5B,EAAAA,SAAS,EAAEP,SAAS,CAACkC,MAAV,CAAiBC,UAJb;AAKf3B,EAAAA,MAAM,EAAER,SAAS,CAACqC,IAAV,CAAeF,UALR;AAMfH,EAAAA,QAAQ,EAAEhC,SAAS,CAACkC,MANL;AAOfxB,EAAAA,QAAQ,EAAEV,SAAS,CAACkC,MAPL;AAQfvB,EAAAA,IAAI,EAAEX,SAAS,CAACsC,OAAV,CAAkBtC,SAAS,CAACkC,MAA5B,CARS;AASftB,EAAAA,IAAI,EAAEZ,SAAS,CAACkC,MATD;AAUfrB,EAAAA,SAAS,EAAEb,SAAS,CAACkC,MAVN;AAWfpB,EAAAA,WAAW,EAAEd,SAAS,CAACuC;AAXR,CAAjB;AAcA,eAAepC,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport { useHistory } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nconst Card = ({ id, index, name, thumbnail, isFood, cat,\n  doneDate, tags, area, alcoholic, unfavRecipe }) => {\n  const history = useHistory();\n  const path = history.location.pathname;\n  let isClicked = false;\n  //   console.log(history);\n  //   console.log(index);\n  //   console.log(name);\n  //   console.log(thumbnail);\n  const popTags = () => (\n    tags.map((tagName, tagInex) => {\n      console.log(` ${tagName} ${tagInex} `);\n      return (\n        <p\n          key={ tagInex }\n          data-testid={ `${index}-${tagName}-horizontal-tag` }\n        >\n          {tagName}\n        </p>\n      );\n    })\n  );\n  function handleClick() {\n    if (isFood) {\n      history.push(`/comidas/${id}`);\n    } else {\n      history.push(`/bebidas/${id}`);\n    }\n  }\n  let urlDetails = '';\n  if (isFood) {\n    urlDetails = `http://localhost:3000/comidas/${id}`;\n  } else {\n    urlDetails = `http://localhost:3000/bebidas/${id}`;\n  }\n  if (path === '/bebidas' || path === '/comidas' || path === '/explorar/comidas/area') {\n    return (\n      <button\n        type=\"button\"\n        onClick={ () => handleClick() }\n        data-testid={ `${index}-recipe-card` }\n      >\n        {/* {console.log(history.location.pathname)} */}\n        <h4 data-testid={ `${index}-card-name` }>{name}</h4>\n        <img\n        // style={ `max-width:200px;\n        //     max-height:150px;\n        //     width: auto;\n        //     height: auto ;` }\n          width=\"320\"\n          height=\"205\"\n          src={ thumbnail }\n          alt=\"Foto da receita\"\n          data-testid={ `${index}-card-img` }\n        />\n      </button>\n    );\n  } if (path === '/receitas-feitas') {\n    console.log('Receitas feitas');\n    return (\n      <div data-testid={ `${index}-recipe-card` }>\n\n        <input\n          type=\"image\"\n          onClick={ () => handleClick() }\n          width=\"320\"\n          height=\"205\"\n          src={ thumbnail }\n          alt=\"Foto da receita\"\n          data-testid={ `${index}-horizontal-image` }\n        />\n        {isFood\n          ? <p data-testid={ `${index}-horizontal-top-text` }>{`${area} - ${cat}`}</p>\n          : <p data-testid={ `${index}-horizontal-top-text` }>{alcoholic}</p>}\n        <a data-testid={ `${index}-horizontal-name` } href={ urlDetails }>{name}</a>\n        <p data-testid={ `${index}-horizontal-done-date` }>{doneDate}</p>\n        <input\n          type=\"image\"\n          data-testid={ `${index}-horizontal-share-btn` }\n          src={ shareIcon }\n          alt=\"share\"\n          onClick={ () => { copy(urlDetails); isClicked = true; } }\n        />\n        <p hidden={ isClicked }>Link copiado!</p>\n        {popTags()}\n      </div>\n    );\n  } if (path === '/receitas-favoritas') {\n    return (\n      <div data-testid={ `${index}-recipe-card` }>\n\n        <input\n          type=\"image\"\n          onClick={ () => handleClick() }\n          width=\"320\"\n          height=\"205\"\n          src={ thumbnail }\n          alt=\"Foto da receita\"\n          data-testid={ `${index}-horizontal-image` }\n        />\n        {isFood\n          ? <p data-testid={ `${index}-horizontal-top-text` }>{`${area} - ${cat}`}</p>\n          : <p data-testid={ `${index}-horizontal-top-text` }>{alcoholic}</p>}\n        <a data-testid={ `${index}-horizontal-name` } href={ urlDetails }>{name}</a>\n        <p data-testid={ `${index}-horizontal-done-date` }>{doneDate}</p>\n        <input\n          type=\"image\"\n          data-testid={ `${index}-horizontal-share-btn` }\n          src={ shareIcon }\n          alt=\"share\"\n          onClick={ () => { copy(urlDetails); isClicked = true; } }\n        />\n        <input\n          type=\"image\"\n          data-testid={ `${index}-horizontal-favorite-btn` }\n          src={ blackHeartIcon }\n          alt=\"favorite\"\n          onClick={ () => unfavRecipe(id) }\n        />\n        <p hidden={ isClicked }>Link copiado!</p>\n        {() => popTags()}\n      </div>\n    );\n  }\n};\nCard.defaultProps = {\n  category: '',\n  doneDate: '',\n  tags: [],\n  area: '',\n  alcoholic: '',\n  unfavRecipe: () => {},\n};\n\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  isFood: PropTypes.bool.isRequired,\n  category: PropTypes.string,\n  doneDate: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  area: PropTypes.string,\n  alcoholic: PropTypes.string,\n  unfavRecipe: PropTypes.func,\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}