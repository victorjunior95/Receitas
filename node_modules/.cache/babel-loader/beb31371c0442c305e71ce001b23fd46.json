{"ast":null,"code":"var _jsxFileName = \"/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/explorer/ExploreIngredients.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { ingredients } from '../../services';\nimport LariContext from '../../context/Context';\n\nconst Teste = ({\n  type\n}) => {\n  const {\n    setNameIngredient\n  } = useContext(LariContext);\n  const history = useHistory();\n  const [arrayOfIngredients, setArrayOfIngredients] = useState([]);\n  const TOTAL_CARDS = 12;\n  useEffect(() => {\n    async function responseAPI() {\n      const response = await ingredients(type);\n\n      if (type === 'bebidas') {\n        return setArrayOfIngredients(response.drinks);\n      }\n\n      return setArrayOfIngredients(response.meals);\n    }\n\n    responseAPI();\n  }, [type]);\n\n  const redirect = (name, path) => {\n    // console.log(name);\n    setNameIngredient(name);\n    history.push(path);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"ingredients-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, arrayOfIngredients.slice(0, TOTAL_CARDS).map((ingredient, index) => {\n    const name = ingredient[type === 'bebidas' ? 'strIngredient1' : 'strIngredient'];\n    const linkAPI = type === 'bebidas' ? 'thecocktaildb' : 'themealdb';\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: name,\n      \"data-testid\": `${index}-ingredient-card`,\n      onClick: () => redirect(name, `/${type}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-card-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, name), /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": `${index}-card-img`,\n      src: `https://www.${linkAPI}.com/images/ingredients/${name}-Small.png`,\n      alt: `${name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }));\n  })));\n};\n\nTeste.propTypes = {\n  type: PropTypes.string.isRequired\n};\nexport default Teste;","map":{"version":3,"sources":["/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/explorer/ExploreIngredients.js"],"names":["React","useContext","useEffect","useState","PropTypes","useHistory","ingredients","LariContext","Teste","type","setNameIngredient","history","arrayOfIngredients","setArrayOfIngredients","TOTAL_CARDS","responseAPI","response","drinks","meals","redirect","name","path","push","slice","map","ingredient","index","linkAPI","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAwBT,UAAU,CAACM,WAAD,CAAxC;AAEA,QAAMI,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAMW,WAAW,GAAG,EAApB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,WAAf,GAA6B;AAC3B,YAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACG,IAAD,CAAlC;;AACA,UAAIA,IAAI,KAAK,SAAb,EAAwB;AACtB,eAAOI,qBAAqB,CAACG,QAAQ,CAACC,MAAV,CAA5B;AACD;;AACD,aAAOJ,qBAAqB,CAACG,QAAQ,CAACE,KAAV,CAA5B;AACD;;AACDH,IAAAA,WAAW;AACZ,GATQ,EASN,CAACN,IAAD,CATM,CAAT;;AAWA,QAAMU,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC/B;AACAX,IAAAA,iBAAiB,CAACU,IAAD,CAAjB;AACAT,IAAAA,OAAO,CAACW,IAAR,CAAaD,IAAb;AACD,GAJD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIT,kBAAkB,CAACW,KAAnB,CAAyB,CAAzB,EAA4BT,WAA5B,EAAyCU,GAAzC,CAA6C,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAClE,UAAMN,IAAI,GAAGK,UAAU,CAAChB,IAAI,KAAK,SAAT,GACpB,gBADoB,GACD,eADA,CAAvB;AAEA,UAAMkB,OAAO,GAAGlB,IAAI,KAAK,SAAT,GAAqB,eAArB,GAAuC,WAAvD;AACA,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,GAAG,EAAGW,IAFR;AAGE,qBAAe,GAAEM,KAAM,kBAHzB;AAIE,MAAA,OAAO,EAAG,MAAMP,QAAQ,CAACC,IAAD,EAAQ,IAAGX,IAAK,EAAhB,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAG,qBAAe,GAAEiB,KAAM,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCN,IAAzC,CANF,eAOE;AACE,qBAAe,GAAEM,KAAM,WADzB;AAEE,MAAA,GAAG,EAAI,eAAcC,OAAQ,2BAA0BP,IAAK,YAF9D;AAGE,MAAA,GAAG,EAAI,GAAEA,IAAK,EAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAeD,GAnBD,CAFJ,CADF,CADF;AA4BD,CAtDD;;AAwDAZ,KAAK,CAACoB,SAAN,GAAkB;AAChBnB,EAAAA,IAAI,EAAEL,SAAS,CAACyB,MAAV,CAAiBC;AADP,CAAlB;AAIA,eAAetB,KAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { ingredients } from '../../services';\nimport LariContext from '../../context/Context';\n\nconst Teste = ({ type }) => {\n  const { setNameIngredient } = useContext(LariContext);\n\n  const history = useHistory();\n\n  const [arrayOfIngredients, setArrayOfIngredients] = useState([]);\n\n  const TOTAL_CARDS = 12;\n\n  useEffect(() => {\n    async function responseAPI() {\n      const response = await ingredients(type);\n      if (type === 'bebidas') {\n        return setArrayOfIngredients(response.drinks);\n      }\n      return setArrayOfIngredients(response.meals);\n    }\n    responseAPI();\n  }, [type]);\n\n  const redirect = (name, path) => {\n    // console.log(name);\n    setNameIngredient(name);\n    history.push(path);\n  };\n\n  return (\n    <div>\n      <ul className=\"ingredients-list\">\n        {\n          arrayOfIngredients.slice(0, TOTAL_CARDS).map((ingredient, index) => {\n            const name = ingredient[type === 'bebidas'\n              ? 'strIngredient1' : 'strIngredient'];\n            const linkAPI = type === 'bebidas' ? 'thecocktaildb' : 'themealdb';\n            return (\n              <button\n                type=\"button\"\n                key={ name }\n                data-testid={ `${index}-ingredient-card` }\n                onClick={ () => redirect(name, `/${type}`) }\n              >\n                <p data-testid={ `${index}-card-name` }>{name}</p>\n                <img\n                  data-testid={ `${index}-card-img` }\n                  src={ `https://www.${linkAPI}.com/images/ingredients/${name}-Small.png` }\n                  alt={ `${name}` }\n                />\n              </button>\n            );\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nTeste.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Teste;\n"]},"metadata":{},"sourceType":"module"}