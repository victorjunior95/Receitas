{"ast":null,"code":"var _jsxFileName = \"/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/searchBar/SeachBar.js\";\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport searchIcon from \"../../images/searchIcon.svg\";\nimport LariContext from '../../context/Context';\n\nconst SearchBar = props => {\n  const {\n    showInput,\n    typeAPI,\n    setHidden\n  } = props;\n  const [filter, setFilter] = useState('ingredients');\n  const [search, setSearch] = useState('');\n  const {\n    handleHeaderSearch\n  } = useContext(LariContext);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-and-searchBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"searchBtnInput\",\n    type: \"button\",\n    onClick: () => setHidden(!showInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"search-top-btn\",\n    src: searchIcon,\n    alt: \"search icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, showInput && /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"search-input\",\n    onChange: ({\n      target\n    }) => setSearch(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radioBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"radios\",\n    id: \"ingredients\",\n    type: \"radio\",\n    \"data-testid\": \"ingredient-search-radio\",\n    onChange: () => setFilter('ingredients'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), \"Ingrediente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"radios\",\n    id: \"name-search\",\n    type: \"radio\",\n    \"data-testid\": \"name-search-radio\",\n    onChange: () => setFilter('name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), \"Nome\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"first-letter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"radios\",\n    id: \"first-letter\",\n    type: \"radio\",\n    \"data-testid\": \"first-letter-search-radio\",\n    onChange: () => setFilter('firstLetter'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), \"Primeira letra\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: () => handleHeaderSearch(search, filter, typeAPI),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Buscar\")));\n};\n\nSearchBar.propTypes = {\n  showInput: PropTypes.bool.isRequired,\n  setHidden: PropTypes.func.isRequired,\n  typeAPI: PropTypes.string.isRequired\n};\nexport default SearchBar;","map":{"version":3,"sources":["/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/searchBar/SeachBar.js"],"names":["React","useContext","useState","PropTypes","LariContext","SearchBar","props","showInput","typeAPI","setHidden","filter","setFilter","search","setSearch","handleHeaderSearch","searchIcon","target","value","propTypes","bool","isRequired","func","string"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport searchIcon from '../../images/searchIcon.svg';\nimport LariContext from '../../context/Context';\n\nconst SearchBar = (props) => {\n  const { showInput, typeAPI, setHidden } = props;\n  const [filter, setFilter] = useState('ingredients');\n  const [search, setSearch] = useState('');\n  const { handleHeaderSearch } = useContext(LariContext);\n\n  return (\n    <>\n      <div className=\"input-and-searchBtn\">\n        <button\n          className=\"searchBtnInput\"\n          type=\"button\"\n          onClick={ () => setHidden(!showInput) }\n        >\n          <img\n            data-testid=\"search-top-btn\"\n            src={ searchIcon }\n            alt=\"search icon\"\n          />\n        </button>\n        <div className=\"input\">\n          { showInput && (<input\n            data-testid=\"search-input\"\n            onChange={ ({ target }) => setSearch(target.value) }\n          />)}\n        </div>\n      </div>\n      <div className=\"radioBtns\">\n        <label htmlFor=\"ingredients\">\n          <input\n            name=\"radios\"\n            id=\"ingredients\"\n            type=\"radio\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={ () => setFilter('ingredients') }\n          />\n          Ingrediente\n        </label>\n        <label htmlFor=\"name-search\">\n          <input\n            name=\"radios\"\n            id=\"name-search\"\n            type=\"radio\"\n            data-testid=\"name-search-radio\"\n            onChange={ () => setFilter('name') }\n          />\n          Nome\n        </label>\n        <label htmlFor=\"first-letter\">\n          <input\n            name=\"radios\"\n            id=\"first-letter\"\n            type=\"radio\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={ () => setFilter('firstLetter') }\n          />\n          Primeira letra\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ () => handleHeaderSearch(search, filter, typeAPI) }\n        >\n          Buscar\n        </button>\n      </div>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  showInput: PropTypes.bool.isRequired,\n  setHidden: PropTypes.func.isRequired,\n  typeAPI: PropTypes.string.isRequired,\n};\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}