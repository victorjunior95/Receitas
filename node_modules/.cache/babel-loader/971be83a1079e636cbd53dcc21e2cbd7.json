{"ast":null,"code":"var _jsxFileName = \"/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/pages/Detalhes.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport LariContext from '../context/Context';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport RecomandationCard from '../components/RecomandationCard';\nimport { getDoneRecipes, inProgressRecipes } from '../utils';\nimport { fetchProductDetailsById } from '../services'; // const saveFavoriteRecipes = (isMeal, foodDetails) => {\n//   let results = {};\n//   if (isMeal) {\n//     results = {\n//       id: foodDetails.idMeal,\n//       type: 'comida',\n//       area: foodDetails.strArea,\n//       category: foodDetails.strCategory,\n//       alcoholicOrNot: '',\n//       name: foodDetails.strMeal,\n//       image: foodDetails.strMealThumb,\n//     };\n//   } else {\n//     results = {\n//       id: foodDetails.idDrink,\n//       type: 'bebida',\n//       area: '',\n//       category: foodDetails.strCategory,\n//       alcoholicOrNot: foodDetails.strAlcoholic,\n//       name: foodDetails.strDrink,\n//       image: foodDetails.strDrinkThumb,\n//     };\n//   }\n//   return results;\n//   // setFavoriteRecipe(results);\n// };\n// const handleIsFavorite = (favorite, isMeal, foodDetails, setIsFavorite) => {\n//   // const [,, id] = location.pathname.split('/');\n//   const favoriteRecipe = saveFavoriteRecipes(isMeal, foodDetails);\n//   localStorage.setItem('isFavorite', favorite);\n//   setIsFavorite(favorite);\n//   const recipeFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n//   let result = '';\n//   if (favorite) {\n//     result = [...recipeFavorite, favoriteRecipe];\n//   } else if (isMeal) {\n//     result = recipeFavorite.filter((recipe) => recipe.id !== foodDetails.idMeal);\n//   } else {\n//     result = recipeFavorite.filter((recipe) => recipe.id !== foodDetails.idDrink);\n//   }\n//   localStorage.setItem('favoriteRecipes', JSON.stringify(result));\n// };\n\nconst Detalhes = () => {\n  const [ingredients, setIngredients] = useState([]);\n  const [buttonRecipe, setButtonRecipe] = useState(true);\n  const [inProgress, setProgress] = useState(false);\n  const [hidden, setHidden] = useState(false);\n  const {\n    isFavorite,\n    setIsFavorite,\n    isMeal,\n    setIsMeal,\n    foodDetails,\n    setFoodDetails,\n    handleIsFavorite\n  } = useContext(LariContext);\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    const doneRecipes = getDoneRecipes();\n    const [,, id] = location.pathname.split('/');\n    const isDone = doneRecipes.some(recipe => recipe.id === id);\n    setButtonRecipe(!isDone);\n  }, [location.pathname]);\n  useEffect(() => {\n    const fav = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const [,, id] = location.pathname.split('/');\n    setIsFavorite(fav.some(result => result.id === id));\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const [, type, id] = location.pathname.split('/');\n      const productType = {\n        comidas: 'meals',\n        bebidas: 'drinks'\n      };\n      const foodDetailRequest = await fetchProductDetailsById(id, type);\n      const foodDetail = foodDetailRequest[productType[type]][0];\n      const ingredientFilter = Object.keys(foodDetail).filter(key => key.includes('strIngredient') && foodDetail[key]);\n      setIsMeal(type === 'comidas');\n      setFoodDetails(foodDetail);\n      setIngredients(ingredientFilter);\n    };\n\n    fetchData();\n  }, [location.pathname]);\n  useEffect(() => {\n    const fetchInProgress = async () => {\n      const inProgres = await inProgressRecipes(isMeal);\n      const [,, id] = location.pathname.split('/');\n      if (!inProgres) return;\n      setProgress(!!inProgres[id]);\n    };\n\n    fetchInProgress();\n  }, [location.pathname, isMeal]);\n  if (!Object.keys(foodDetails).length) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 48\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: isMeal ? foodDetails.strMealThumb : foodDetails.strDrinkThumb,\n    alt: foodDetails.strMeal,\n    width: \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, isMeal ? foodDetails.strMeal : foodDetails.strDrink), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, isMeal ? foodDetails.strCategory : foodDetails.strAlcoholic), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: async () => {\n      const ONE_SECOND = 1000;\n      await copy(window.location.href);\n      setHidden(true);\n      setTimeout(() => setHidden(false), ONE_SECOND);\n    },\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"Share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    hidden: !hidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"favorite-btn\",\n    onClick: () => handleIsFavorite(!isFavorite),\n    src: isFavorite ? blackHeartIcon : whiteHeartIcon,\n    alt: \"Favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), ingredients.map((ingredient, index) => {\n    const ingredientName = foodDetails[ingredient];\n    const ingMeasure = foodDetails[ingredient.replace('Ingredient', 'Measure')];\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: ingredient,\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, `${ingredientName} - ${ingMeasure}`);\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, foodDetails.strInstructions), foodDetails.strYoutube && /*#__PURE__*/React.createElement(\"iframe\", {\n    src: `https://www.youtube.com/embed/${foodDetails.strYoutube.split('v=')[1]}`,\n    frameBorder: \"0\",\n    allowFullScreen: true,\n    title: \"video\",\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(RecomandationCard, {\n    type: isMeal ? 'comidas' : 'bebidas',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), buttonRecipe && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      history.push(`${location.pathname}/in-progress`, foodDetails);\n    },\n    type: \"button\",\n    className: \"btnStyle\",\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, inProgress ? 'Continuar Receita' : 'Iniciar Receita'));\n};\n\nexport default Detalhes;","map":{"version":3,"sources":["/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/pages/Detalhes.js"],"names":["React","useEffect","useState","useContext","useLocation","useHistory","copy","LariContext","RecomandationCard","getDoneRecipes","inProgressRecipes","fetchProductDetailsById","Detalhes","ingredients","setIngredients","buttonRecipe","setButtonRecipe","inProgress","setProgress","hidden","setHidden","isFavorite","setIsFavorite","isMeal","setIsMeal","foodDetails","setFoodDetails","handleIsFavorite","location","history","doneRecipes","id","pathname","split","isDone","some","recipe","fav","JSON","parse","localStorage","getItem","result","fetchData","type","productType","comidas","bebidas","foodDetailRequest","foodDetail","ingredientFilter","Object","keys","filter","key","includes","fetchInProgress","inProgres","length","strMealThumb","strDrinkThumb","strMeal","strDrink","strCategory","strAlcoholic","ONE_SECOND","window","href","setTimeout","shareIcon","blackHeartIcon","whiteHeartIcon","map","ingredient","index","ingredientName","ingMeasure","replace","strInstructions","strYoutube","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\n\nimport { useLocation, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport LariContext from '../context/Context';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport RecomandationCard from '../components/RecomandationCard';\nimport { getDoneRecipes, inProgressRecipes } from '../utils';\n\nimport { fetchProductDetailsById } from '../services';\n\n// const saveFavoriteRecipes = (isMeal, foodDetails) => {\n//   let results = {};\n//   if (isMeal) {\n//     results = {\n//       id: foodDetails.idMeal,\n//       type: 'comida',\n//       area: foodDetails.strArea,\n//       category: foodDetails.strCategory,\n//       alcoholicOrNot: '',\n//       name: foodDetails.strMeal,\n//       image: foodDetails.strMealThumb,\n//     };\n//   } else {\n//     results = {\n//       id: foodDetails.idDrink,\n//       type: 'bebida',\n//       area: '',\n//       category: foodDetails.strCategory,\n//       alcoholicOrNot: foodDetails.strAlcoholic,\n//       name: foodDetails.strDrink,\n//       image: foodDetails.strDrinkThumb,\n//     };\n//   }\n//   return results;\n//   // setFavoriteRecipe(results);\n// };\n// const handleIsFavorite = (favorite, isMeal, foodDetails, setIsFavorite) => {\n//   // const [,, id] = location.pathname.split('/');\n//   const favoriteRecipe = saveFavoriteRecipes(isMeal, foodDetails);\n//   localStorage.setItem('isFavorite', favorite);\n//   setIsFavorite(favorite);\n//   const recipeFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n//   let result = '';\n//   if (favorite) {\n//     result = [...recipeFavorite, favoriteRecipe];\n//   } else if (isMeal) {\n//     result = recipeFavorite.filter((recipe) => recipe.id !== foodDetails.idMeal);\n//   } else {\n//     result = recipeFavorite.filter((recipe) => recipe.id !== foodDetails.idDrink);\n//   }\n//   localStorage.setItem('favoriteRecipes', JSON.stringify(result));\n// };\n\nconst Detalhes = () => {\n  const [ingredients, setIngredients] = useState([]);\n  const [buttonRecipe, setButtonRecipe] = useState(true);\n  const [inProgress, setProgress] = useState(false);\n  const [hidden, setHidden] = useState(false);\n  const { isFavorite, setIsFavorite, isMeal, setIsMeal, foodDetails,\n    setFoodDetails, handleIsFavorite } = useContext(LariContext);\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    const doneRecipes = getDoneRecipes();\n    const [,, id] = location.pathname.split('/');\n    const isDone = doneRecipes.some((recipe) => recipe.id === id);\n    setButtonRecipe(!isDone);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const fav = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const [,, id] = location.pathname.split('/');\n    setIsFavorite(fav.some((result) => result.id === id));\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const [, type, id] = location.pathname.split('/');\n      const productType = { comidas: 'meals', bebidas: 'drinks' };\n\n      const foodDetailRequest = await fetchProductDetailsById(id, type);\n      const foodDetail = foodDetailRequest[productType[type]][0];\n\n      const ingredientFilter = Object\n        .keys(foodDetail).filter(\n          (key) => key.includes('strIngredient') && foodDetail[key],\n        );\n\n      setIsMeal(type === 'comidas');\n      setFoodDetails(foodDetail);\n      setIngredients(ingredientFilter);\n    };\n\n    fetchData();\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const fetchInProgress = async () => {\n      const inProgres = await inProgressRecipes(isMeal);\n      const [,, id] = location.pathname.split('/');\n      if (!inProgres) return;\n      setProgress(!!inProgres[id]);\n    };\n    fetchInProgress();\n  }, [location.pathname, isMeal]);\n\n  if (!Object.keys(foodDetails).length) return <h2>Loading...</h2>;\n\n  return (\n    <div>\n      <img\n        data-testid=\"recipe-photo\"\n        src={ isMeal ? foodDetails.strMealThumb : foodDetails.strDrinkThumb }\n        alt={ foodDetails.strMeal }\n        width=\"300px\"\n      />\n      <h2 data-testid=\"recipe-title\">\n        {isMeal ? foodDetails.strMeal : foodDetails.strDrink}\n      </h2>\n      <h3 data-testid=\"recipe-category\">\n        { isMeal ? foodDetails.strCategory : foodDetails.strAlcoholic}\n      </h3>\n      <input\n        type=\"image\"\n        onClick={ async () => {\n          const ONE_SECOND = 1000;\n          await copy(window.location.href);\n          setHidden(true);\n          setTimeout(() => setHidden(false), ONE_SECOND);\n        } }\n        data-testid=\"share-btn\"\n        src={ shareIcon }\n        alt=\"Share\"\n      />\n\n      <span hidden={ !hidden }>Link copiado!</span>\n      <input\n        type=\"image\"\n        data-testid=\"favorite-btn\"\n        onClick={\n          () => handleIsFavorite(!isFavorite)\n        }\n        src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n        alt=\"Favorite\"\n      />\n      {\n        ingredients.map((ingredient, index) => {\n          const ingredientName = foodDetails[ingredient];\n          const ingMeasure = foodDetails[ingredient.replace('Ingredient', 'Measure')];\n\n          return (\n            <p key={ ingredient } data-testid={ `${index}-ingredient-name-and-measure` }>\n              {`${ingredientName} - ${ingMeasure}`}\n            </p>\n          );\n        })\n      }\n      <p data-testid=\"instructions\">{foodDetails.strInstructions}</p>\n\n      {foodDetails.strYoutube && <iframe\n        src={ `https://www.youtube.com/embed/${foodDetails.strYoutube.split('v=')[1]}` }\n        frameBorder=\"0\"\n        allowFullScreen\n        title=\"video\"\n        data-testid=\"video\"\n      />}\n\n      <RecomandationCard type={ isMeal ? 'comidas' : 'bebidas' } />\n\n      {buttonRecipe && (\n        <button\n          onClick={ () => {\n            history.push(`${location.pathname}/in-progress`, foodDetails);\n          } }\n          type=\"button\"\n          className=\"btnStyle\"\n          data-testid=\"start-recipe-btn\"\n        >\n          { inProgress ? 'Continuar Receita' : 'Iniciar Receita'}\n\n        </button>)}\n    </div>\n  );\n};\nexport default Detalhes;\n"]},"metadata":{},"sourceType":"module"}