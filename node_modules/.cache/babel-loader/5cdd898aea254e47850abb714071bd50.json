{"ast":null,"code":"var _jsxFileName = \"/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/pages/Comidas.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport LariContext from '../context/Context';\nimport Card from '../components/Card';\nimport { categoryFood, seachFoodByCategory } from '../services';\nimport '../styles/main.css';\n\nconst Comidas = () => {\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORY = 5;\n  const {\n    recipesFetch,\n    food,\n    nameIngredient,\n    setNameIngredient,\n    handleHeaderSearch\n  } = useContext(LariContext);\n  const [mapCards, setMapCards] = useState();\n  const [category, setCategory] = useState([]);\n  const [mapCategorys, setMapCategorys] = useState();\n  const [filteredFoods, setFilteredFoods] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState('All');\n  useEffect(() => {\n    setFilteredFoods(food);\n  }, [food]);\n  useEffect(() => {\n    // comá¹•onetDidMount\n    async function fetchFetch() {\n      const result = await recipesFetch(true);\n      return result;\n    }\n\n    function fetchCategory() {\n      categoryFood().then(response => setCategory(response)); // console.log(categoryFood());\n      // console.log(result);\n    }\n\n    fetchCategory(); // console.log(category);\n\n    fetchFetch();\n  }, []);\n  useEffect(() => {\n    // console.log(food);\n    const mapFoods = () => setMapCards(filteredFoods.map((meal, index) => {\n      if (index < MAX_RECIPES) {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: meal.idMeal,\n          id: meal.idMeal,\n          index: index,\n          name: meal.strMeal,\n          thumbnail: meal.strMealThumb,\n          isFood: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }\n        });\n      }\n\n      return '';\n    }));\n\n    mapFoods();\n  }, [filteredFoods]);\n  useEffect(() => {\n    // const filterCategories = (cat) => {\n    //   console.log(cat);\n    //   const result = food.filter((meal) => (meal.strCategory === cat));\n    //   setFilteredFoods(result);\n    // };\n    const fetchFoodByCategory = async cat => {\n      // console.log(` ${currentCategory}  <=>  ${cat} `);\n      if (currentCategory === cat) {\n        setFilteredFoods(food);\n        setCurrentCategory('All'); // console.log(` ${currentCategory}`);\n      } else {\n        const result = await seachFoodByCategory(cat);\n        setFilteredFoods(result);\n        setCurrentCategory(cat);\n      }\n    }; // console.log(category);\n\n\n    const mapCategory = () => setMapCategorys(category.map((meal, index) => {\n      if (index < MAX_CATEGORY) {\n        return /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: meal.strCategory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          key: index,\n          type: \"radio\",\n          \"data-testid\": `${meal.strCategory}-category-filter`,\n          onClick: () => fetchFoodByCategory(meal.strCategory),\n          checked: currentCategory === meal.strCategory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }\n        }), meal.strCategory);\n      }\n\n      return '';\n    }));\n\n    mapCategory();\n  }, [category, food, currentCategory]);\n  useEffect(() => {\n    if (nameIngredient) {\n      handleHeaderSearch(nameIngredient, 'ingredients', 'Comidas');\n      setNameIngredient('');\n    }\n  }, [nameIngredient]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Comidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radioBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, mapCategorys, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"All\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: () => {\n      setCurrentCategory('All');\n      setFilteredFoods(food);\n    },\n    checked: currentCategory === 'All',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imgCards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, mapCards), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Comidas;","map":{"version":3,"sources":["/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/pages/Comidas.js"],"names":["React","useContext","useEffect","useState","Header","Footer","LariContext","Card","categoryFood","seachFoodByCategory","Comidas","MAX_RECIPES","MAX_CATEGORY","recipesFetch","food","nameIngredient","setNameIngredient","handleHeaderSearch","mapCards","setMapCards","category","setCategory","mapCategorys","setMapCategorys","filteredFoods","setFilteredFoods","currentCategory","setCurrentCategory","fetchFetch","result","fetchCategory","then","response","mapFoods","map","meal","index","idMeal","strMeal","strMealThumb","fetchFoodByCategory","cat","mapCategory","strCategory"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport LariContext from '../context/Context';\nimport Card from '../components/Card';\nimport { categoryFood, seachFoodByCategory } from '../services';\nimport '../styles/main.css';\n\nconst Comidas = () => {\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORY = 5;\n  const { recipesFetch,\n    food,\n    nameIngredient,\n    setNameIngredient,\n    handleHeaderSearch } = useContext(LariContext);\n  const [mapCards, setMapCards] = useState();\n  const [category, setCategory] = useState([]);\n  const [mapCategorys, setMapCategorys] = useState();\n  const [filteredFoods, setFilteredFoods] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState('All');\n  useEffect(() => {\n    setFilteredFoods(food);\n  }, [food]);\n  useEffect(() => {\n    // comá¹•onetDidMount\n    async function fetchFetch() {\n      const result = await recipesFetch(true);\n      return result;\n    }\n    function fetchCategory() {\n      categoryFood()\n        .then((response) => setCategory(response));\n      // console.log(categoryFood());\n      // console.log(result);\n    }\n    fetchCategory();\n    // console.log(category);\n    fetchFetch();\n  }, []);\n  useEffect(() => {\n    // console.log(food);\n    const mapFoods = () => (\n      setMapCards(\n        filteredFoods.map((meal, index) => {\n          if (index < MAX_RECIPES) {\n            return (\n              <Card\n                key={ meal.idMeal }\n                id={ meal.idMeal }\n                index={ index }\n                name={ meal.strMeal }\n                thumbnail={ meal.strMealThumb }\n                isFood\n              />\n            );\n          }\n          return '';\n        }),\n      )\n    );\n    mapFoods();\n  }, [filteredFoods]);\n  useEffect(() => {\n    // const filterCategories = (cat) => {\n    //   console.log(cat);\n    //   const result = food.filter((meal) => (meal.strCategory === cat));\n    //   setFilteredFoods(result);\n    // };\n    const fetchFoodByCategory = async (cat) => {\n      // console.log(` ${currentCategory}  <=>  ${cat} `);\n      if (currentCategory === cat) {\n        setFilteredFoods(food);\n        setCurrentCategory('All');\n        // console.log(` ${currentCategory}`);\n      } else {\n        const result = await seachFoodByCategory(cat);\n        setFilteredFoods(result);\n        setCurrentCategory(cat);\n      }\n    };\n    // console.log(category);\n    const mapCategory = () => (\n      setMapCategorys(\n        category.map((meal, index) => {\n          if (index < MAX_CATEGORY) {\n            return (\n              <label htmlFor={ meal.strCategory }>\n                <input\n                  key={ index }\n                  type=\"radio\"\n                  data-testid={ `${meal.strCategory}-category-filter` }\n                  onClick={ () => fetchFoodByCategory(meal.strCategory) }\n                  checked={ currentCategory === meal.strCategory }\n                />\n                {meal.strCategory}\n              </label>\n\n            );\n          }\n          return '';\n        }),\n      )\n    );\n    mapCategory();\n  }, [category, food, currentCategory]);\n\n  useEffect(() => {\n    if (nameIngredient) {\n      handleHeaderSearch(nameIngredient, 'ingredients', 'Comidas');\n      setNameIngredient('');\n    }\n  }, [nameIngredient]);\n\n  return (\n    <div>\n      <Header title=\"Comidas\" />\n      <div className=\"radioBtns\">\n        {mapCategorys}\n\n        <label htmlFor=\"All\">\n          All\n          <input\n            type=\"radio\"\n            data-testid=\"All-category-filter\"\n            onClick={ () => {\n              setCurrentCategory('All');\n              setFilteredFoods(food);\n            } }\n            checked={ currentCategory === 'All' }\n          />\n        </label>\n      </div>\n      <div className=\"imgCards\">\n        {mapCards}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Comidas;\n"]},"metadata":{},"sourceType":"module"}