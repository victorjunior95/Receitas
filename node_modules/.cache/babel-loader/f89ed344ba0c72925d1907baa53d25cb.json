{"ast":null,"code":"var _jsxFileName = \"/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/RecomandationCard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { fetchRecomendationsCard } from '../services';\n\nconst RecomandationCard = ({\n  type\n}) => {\n  const [typeDrinkFood, setType] = useState([]);\n  const isMeal = type === 'comidas';\n  useEffect(() => {\n    const Fetch = async () => {\n      const drinkOrFood = await fetchRecomendationsCard(type);\n      setType(drinkOrFood);\n    };\n\n    Fetch();\n  }, [type]);\n  return /*#__PURE__*/React.createElement(Carousel, {\n    className: \"Carousel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, typeDrinkFood.reduce((acc, _, index, array) => {\n    if (index % 2 === 0) {\n      acc.push(array.slice(index, index + 2));\n    }\n\n    return acc;\n  }, []).map(([item1, item2], index) => /*#__PURE__*/React.createElement(Carousel.Item, {\n    key: isMeal ? item1.idDrink : item1.idMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index * 2}-recomendation-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-50\",\n    src: isMeal ? item1.strDrinkThumb : item1.strMealThumb,\n    alt: item1.strCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": `${index * 2}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, isMeal ? item1.strDrink : item1.strMeal)), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index * 2 + 1}-recomendation-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-50\",\n    src: isMeal ? item2.strDrinkThumb : item2.strMealThumb,\n    alt: item2.strCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": `${index * 2 + 1}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, isMeal ? item2.strDrink : item2.strMeal)))));\n};\n\nexport default RecomandationCard;\nRecomandationCard.propTypes = {\n  type: PropTypes.elementType.isRequired\n};","map":{"version":3,"sources":["/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/RecomandationCard.js"],"names":["React","useEffect","useState","Carousel","PropTypes","fetchRecomendationsCard","RecomandationCard","type","typeDrinkFood","setType","isMeal","Fetch","drinkOrFood","reduce","acc","_","index","array","push","slice","map","item1","item2","idDrink","idMeal","strDrinkThumb","strMealThumb","strCategory","strDrink","strMeal","propTypes","elementType","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { fetchRecomendationsCard } from '../services';\n\nconst RecomandationCard = ({ type }) => {\n  const [typeDrinkFood, setType] = useState([]);\n  const isMeal = type === 'comidas';\n\n  useEffect(() => {\n    const Fetch = async () => {\n      const drinkOrFood = await fetchRecomendationsCard(type);\n      setType(drinkOrFood);\n    };\n    Fetch();\n  }, [type]);\n\n  return (\n\n    <Carousel className=\"Carousel\">\n\n      {typeDrinkFood.reduce((acc, _, index, array) => {\n        if (index % 2 === 0) {\n          acc.push(array.slice(index, index + 2));\n        } return acc;\n      }, []).map(([item1, item2], index) => (\n        <Carousel.Item key={ isMeal ? item1.idDrink : item1.idMeal }>\n          <div\n            data-testid={ `${index * 2}-recomendation-card` }\n\n          >\n            <img\n              className=\"d-block w-50\"\n              src={ isMeal ? item1.strDrinkThumb : item1.strMealThumb }\n              alt={ item1.strCategory }\n            />\n            <h3 data-testid={ `${index * 2}-recomendation-title` }>\n              {isMeal ? item1.strDrink : item1.strMeal}\n\n            </h3>\n          </div>\n\n          <div\n            data-testid={ `${(index * 2) + 1}-recomendation-card` }\n\n          >\n            <img\n              className=\"d-block w-50\"\n              src={ isMeal ? item2.strDrinkThumb : item2.strMealThumb }\n              alt={ item2.strCategory }\n            />\n            <h3 data-testid={ `${(index * 2) + 1}-recomendation-title` }>\n              {isMeal ? item2.strDrink : item2.strMeal}\n\n            </h3>\n\n          </div>\n        </Carousel.Item>\n\n      ))}\n    </Carousel>\n\n  );\n};\nexport default RecomandationCard;\n\nRecomandationCard.propTypes = {\n  type: PropTypes.elementType.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}