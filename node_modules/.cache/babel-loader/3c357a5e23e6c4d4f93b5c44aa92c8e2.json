{"ast":null,"code":"var _jsxFileName = \"/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/explorer/ExplorerType.js\";\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { fetchSurprised } from '../../services';\n\nconst ExplorerType = ({\n  showAreaButton = true,\n  type\n}) => {\n  const history = useHistory();\n\n  const RedirectPages = path => {\n    history.push(path);\n  };\n\n  async function redirectSurprise() {\n    const responseAPI = await fetchSurprised(type);\n\n    if (type === 'comidas') {\n      RedirectPages(`/${type}/${responseAPI.meals[0].idMeal}`);\n    } else {\n      RedirectPages(`/${type}/${responseAPI.drinks[0].idDrink}`);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"explore-by-ingredient\",\n    onClick: () => RedirectPages(`/explorar/${type}/ingredientes`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Por Ingredientes\"), showAreaButton && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"explore-by-area\",\n    onClick: () => RedirectPages('/explorar/comidas/area'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Por Local de Origem\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"explore-surprise\",\n    onClick: () => redirectSurprise(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Me Surpreenda!\"));\n};\n\nExplorerType.propTypes = {\n  showAreaButton: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default ExplorerType;","map":{"version":3,"sources":["/home/cliente/Trybe/trybe-projects/sd-08-project-recipes-app/src/components/explorer/ExplorerType.js"],"names":["React","useHistory","PropTypes","fetchSurprised","ExplorerType","showAreaButton","type","history","RedirectPages","path","push","redirectSurprise","responseAPI","meals","idMeal","drinks","idDrink","propTypes","bool","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,gBAA/B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,cAAc,GAAG,IAAnB;AAAyBC,EAAAA;AAAzB,CAAD,KAAqC;AACxD,QAAMC,OAAO,GAAGN,UAAU,EAA1B;;AACA,QAAMO,aAAa,GAAIC,IAAD,IAAU;AAC9BF,IAAAA,OAAO,CAACG,IAAR,CAAaD,IAAb;AACD,GAFD;;AAIA,iBAAeE,gBAAf,GAAkC;AAChC,UAAMC,WAAW,GAAG,MAAMT,cAAc,CAACG,IAAD,CAAxC;;AACA,QAAIA,IAAI,KAAK,SAAb,EAAwB;AACtBE,MAAAA,aAAa,CAAE,IAAGF,IAAK,IAAGM,WAAW,CAACC,KAAZ,CAAkB,CAAlB,EAAqBC,MAAO,EAAzC,CAAb;AACD,KAFD,MAEO;AACLN,MAAAA,aAAa,CAAE,IAAGF,IAAK,IAAGM,WAAW,CAACG,MAAZ,CAAmB,CAAnB,EAAsBC,OAAQ,EAA3C,CAAb;AACD;AACF;;AAED,sBACE,uDACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,uBAFd;AAGE,IAAA,OAAO,EAAG,MAAMR,aAAa,CAAE,aAAYF,IAAK,eAAnB,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EASID,cAAc,iBACZ;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,iBAFd;AAGE,IAAA,OAAO,EAAG,MAAMG,aAAa,CAAC,wBAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVN,eAoBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,kBAFd;AAGE,IAAA,OAAO,EAAG,MAAMG,gBAAgB,EAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF,CADF;AA8BD,CA7CD;;AA+CAP,YAAY,CAACa,SAAb,GAAyB;AACvBZ,EAAAA,cAAc,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UADR;AAEvBb,EAAAA,IAAI,EAAEJ,SAAS,CAACkB,MAAV,CAAiBD;AAFA,CAAzB;AAKA,eAAef,YAAf","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { fetchSurprised } from '../../services';\n\nconst ExplorerType = ({ showAreaButton = true, type }) => {\n  const history = useHistory();\n  const RedirectPages = (path) => {\n    history.push(path);\n  };\n\n  async function redirectSurprise() {\n    const responseAPI = await fetchSurprised(type);\n    if (type === 'comidas') {\n      RedirectPages(`/${type}/${responseAPI.meals[0].idMeal}`);\n    } else {\n      RedirectPages(`/${type}/${responseAPI.drinks[0].idDrink}`);\n    }\n  }\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        data-testid=\"explore-by-ingredient\"\n        onClick={ () => RedirectPages(`/explorar/${type}/ingredientes`) }\n      >\n        Por Ingredientes\n      </button>\n      {\n        showAreaButton && (\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-area\"\n            onClick={ () => RedirectPages('/explorar/comidas/area') }\n          >\n            Por Local de Origem\n          </button>\n        )\n      }\n\n      <button\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        onClick={ () => redirectSurprise() }\n      >\n        Me Surpreenda!\n      </button>\n    </>\n  );\n};\n\nExplorerType.propTypes = {\n  showAreaButton: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ExplorerType;\n"]},"metadata":{},"sourceType":"module"}